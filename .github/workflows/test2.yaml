name: start_run
on: 
  push:
    branches-ignore:
      - master
      - main
jobs:
  echo_event :
    runs-on: ubuntu-latest

    steps:
    - name: ref
      run: echo ${{ github.ref }}

    - name: event
      run: "echo '${{ toJSON(github.event) }}'"

    - name: event_name
      run: echo ${{ github.event_name }}

    - name: event_path
      run: echo ${{ github.event_path }}

        #gen_needs:
        #  runs-on: ubuntu-latest
        #  outputs:
        #    matrix: ${{ steps.json.outputs.string }}

        #  steps:
        #    - id: json 
        #      run: |
        #        test "${BRANCH}" == "refs/heads/main" \
        #          && NEEDS="[]" \
        #          || NEEDS="[]"
        #        echo "::set-output name=string::${NEEDS}" \
        #      env:
        #        BRANCH: ${{ github.ref }}

  gen_values:
    if: github.ref == 'refs/heads/main'
    #needs: gen_matrix
    #strategy:
    #  matrix: ${{fromJson(needs.gen_matrix.outputs.matrix)}}
    runs-on: ubuntu-latest
    outputs:
      test1: ${{ steps.test1.outputs.key1 }}
      test2: ${{ steps.test1.outputs.key2 }}

    steps:
      - id: test1
        run: |
          echo "::set-output name=${KEY}::$(date +%s%N)"
        env:
          KEY: ${{ matrix.m }}

  values:
    needs: gen_values
    if: ${{ github.ref != 'refs/heads/main' && always() }}
    runs-on: ubuntu-latest
    outputs:
      test1: ${{ steps.test1.outputs.key1 }}
      test2: ${{ steps.test1.outputs.key2 }}

    steps:
      - id: test1
        run: |
          test -z "${TEST1}" \
            && echo "::set-output name=key1::fallback $(date +%s%N)" \
            || echo "::set-output name=key1::${TEST1}" 
          test -z "${TEST2}" \
            && echo "::set-output name=key2::fallback value2" \
            || echo "::set-output name=key2::${TEST2}" 
        env:
          TEST1: ${{ needs.gen_values.outputs.test1 }}
          TEST2: ${{ needs.gen_values.outputs.test2 }}

  echo_values:
    needs: values
    runs-on: ubuntu-latest
    steps:
      - id: test1
        run: |
          echo "test1=${TEST1}"
          echo "test2=${TEST2}"
        env:
          TEST1: ${{ needs.values.outputs.test1 }}
          TEST2: ${{ needs.values.outputs.test2 }}

